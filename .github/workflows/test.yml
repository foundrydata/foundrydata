name: Testing v2.1 (Quick)

on:
  push:
    branches: [ main, master, develop ]
    tags:
      - 'v*'
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - 'assets/**'
      - '**/*.svg'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - 'assets/**'
      - '**/*.svg'
      - '.github/ISSUE_TEMPLATE/**'

concurrency:
  group: tests-quick-${{ github.ref }}
  cancel-in-progress: true

env:
  # Global defaults for Testing v2.1 (can be overridden per job)
  TEST_SEED: "424242"
  DEBUG: "false"

jobs:
  lint:
    name: ESLint (zero errors policy)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: ESLint check
        id: eslint_check
        run: npm run lint
        continue-on-error: true

      - name: Auto-fix (no commit) and prepare patch
        if: steps.eslint_check.outcome == 'failure'
        run: |
          npm run lint:fix || true
          git diff > eslint-fixes.patch || true
          echo "ESLint found issues. Auto-fix attempted. See artifact patch."

      - name: Upload ESLint fixes patch
        if: steps.eslint_check.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: eslint-fixes-patch
          path: eslint-fixes.patch
          if-no-files-found: ignore

      - name: Fail if ESLint errors remain
        if: steps.eslint_check.outcome == 'failure'
        run: |
          echo "ESLint errors remain after auto-fix. Failing policy." >&2
          exit 1

  typecheck:
    name: TypeScript Typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Typecheck (tests config)
        run: npm run typecheck

      - name: Typecheck (project references)
        run: npm run typecheck:build

  quick-tests:
    name: Quick Tests (${{ matrix.os }} · Node ${{ matrix.node }} · ${{ matrix.draft }})
    needs: [lint, typecheck]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20.x, 22.x]
        draft: [draft-07, 2019-09, 2020-12]
    env:
      CI: "true"
      SCHEMA_DRAFT: ${{ matrix.draft }}
      FC_NUM_RUNS: "100"
      # Test pool configured in vitest config (threads on Windows, forks otherwise)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run quick tests (with annotations)
        run: |
          echo "Running quick tests with SCHEMA_DRAFT=${SCHEMA_DRAFT}, FC_NUM_RUNS=${FC_NUM_RUNS}"
          npx vitest run --config vitest.config.ts --reporter=default --reporter=github-actions

      - name: Upload raw test logs (optional)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: quick-tests-logs-${{ matrix.os }}-node-${{ matrix.node }}-draft-${{ matrix.draft }}
          path: |
            ./**/vitest*.log
          if-no-files-found: ignore
